# ADJ LIST DIRECTED WEIGHTED GRAPH
def addnode(v):
    if v in graph:
        print(v, "is already available")
    else:
        graph[v] = []

def show():
    for x in graph:
        print(x, ":", graph[x])

def addedge(node1, node2, w):
    if node1 not in graph:
        print(node1, "not present in the graph")
    elif node2 not in graph:
        print(node2, "not present in the graph")
    else:
        graph[node1].append((node2, w))
        #graph[node2].append((node1, w))

graph = {}
while True:
    print()
    print("1. Add Node\n2. Show Graph\n3. Add Edge\n4. Quit")
    ch = int(input("Choice: "))
    if ch == 1:
        x = input("Enter node: ")
        addnode(x)
    elif ch == 2:
        show()
    elif ch == 3:
        node1 = input("Enter node 1: ")
        node2 = input("Enter node 2: ")
        w = int(input("Enter the weight: "))
        addedge(node1, node2, w)
    elif ch == 4:
        break
    else:
        print("Invalid choice")
OUTPUT:
-------------------------------------
1. Add Node
2. Show Graph
3. Add Edge
4. Quit
Choice: 1
Enter node: A

1. Add Node
2. Show Graph
3. Add Edge
4. Quit
Choice: 1
Enter node: B

1. Add Node
2. Show Graph
3. Add Edge
4. Quit
Choice: 1
Enter node: C

1. Add Node
2. Show Graph
3. Add Edge
4. Quit
Choice: 1
Enter node: D

1. Add Node
2. Show Graph
3. Add Edge
4. Quit
Choice: 3
Enter node 1: A
Enter node 2: B
Enter the weight: 3

1. Add Node
2. Show Graph
3. Add Edge
4. Quit
Choice: 3
Enter node 1: D
Enter node 2: A
Enter the weight: 5

1. Add Node
2. Show Graph
3. Add Edge
4. Quit
Choice: 3
Enter node 1: D
Enter node 2: C
Enter the weight: 8

1. Add Node
2. Show Graph
3. Add Edge
4. Quit
Choice: 2
A : [('B', 3)]
B : []
C : []
D : [('A', 5), ('C', 8)]